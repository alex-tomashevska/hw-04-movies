{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/study/react/04/hw-04-movies/src/components/Movie/index.js\";\n// /** @format */\n//\n// import {memo} from 'react'\n// import styles from './Movie.module.css'\n// import placeholder from '../../assets/images/placeholder.png'\n//\n// export const Movie = memo(({movie}) => {\n//   const {\n//     release_date,\n//     vote_average,\n//     poster_path,\n//     overview,\n//     title,\n//     genres} = movie\n//\n//   const posterURL =  poster_path ? `https://image.themoviedb.org/t/p/w500${poster_path}` : placeholder;\n//\n//   return(\n//     <article className={styles.article}>\n//       <div className={styles.themovieb}>\n//         <img\n//           src={posterURL}\n//           alt={title}\n//           title={title}\n//           className={styles.poster}\n//         />\n//       </div>\n//\n//       <div>\n//           <h1 className={styles.title}>\n//             {title}\n//           </h1>\n//           <span>\n//             {release_date}\n//           </span>\n//\n//         <p className={styles.score}>\n//           User score: {vote_average}\n//         </p>\n//\n//         <p className={styles.overview}>\n//           Overview: {overview}\n//         </p>\n//\n//         <p className={styles.label}>\n//           Genres:\n//           <ul className={styles.genresList}>\n//             {genres.map(({id, name}) => (\n//               <li key={id} className={styles.genresItem}>\n//                 {name}\n//               </li>\n//             ))}\n//           </ul>\n//         </p>\n//       </div>\n//     </article>\n//\n//   )\n// })\n\n/** @format */\n\nimport { memo } from 'react';\nimport placeholder from '../../assets/images/placeholder.png';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Movie.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Movie = /*#__PURE__*/memo(_c = _ref => {\n  let {\n    items\n  } = _ref;\n  const url = poster_path ? `https://image.themoviedb.org/t/p/original${poster_path}` : placeholder;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movieCard,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.poster,\n        src: url,\n        alt: item.title,\n        title: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: {\n          pathname: `/movies/${item.id}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: styles.title,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"(\", item.release_date.slice(0, 4), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n});\n_c2 = Movie;\nvar _c, _c2;\n$RefreshReg$(_c, \"Movie$memo\");\n$RefreshReg$(_c2, \"Movie\");","map":{"version":3,"names":["memo","placeholder","NavLink","styles","Movie","items","url","poster_path","map","item","movieCard","poster","title","id","pathname","release_date","slice"],"sources":["/Users/aleksandra/study/react/04/hw-04-movies/src/components/Movie/index.js"],"sourcesContent":["// /** @format */\n//\n// import {memo} from 'react'\n// import styles from './Movie.module.css'\n// import placeholder from '../../assets/images/placeholder.png'\n//\n// export const Movie = memo(({movie}) => {\n//   const {\n//     release_date,\n//     vote_average,\n//     poster_path,\n//     overview,\n//     title,\n//     genres} = movie\n//\n//   const posterURL =  poster_path ? `https://image.themoviedb.org/t/p/w500${poster_path}` : placeholder;\n//\n//   return(\n//     <article className={styles.article}>\n//       <div className={styles.themovieb}>\n//         <img\n//           src={posterURL}\n//           alt={title}\n//           title={title}\n//           className={styles.poster}\n//         />\n//       </div>\n//\n//       <div>\n//           <h1 className={styles.title}>\n//             {title}\n//           </h1>\n//           <span>\n//             {release_date}\n//           </span>\n//\n//         <p className={styles.score}>\n//           User score: {vote_average}\n//         </p>\n//\n//         <p className={styles.overview}>\n//           Overview: {overview}\n//         </p>\n//\n//         <p className={styles.label}>\n//           Genres:\n//           <ul className={styles.genresList}>\n//             {genres.map(({id, name}) => (\n//               <li key={id} className={styles.genresItem}>\n//                 {name}\n//               </li>\n//             ))}\n//           </ul>\n//         </p>\n//       </div>\n//     </article>\n//\n//   )\n// })\n\n\n/** @format */\n\nimport {memo} from 'react'\nimport placeholder from '../../assets/images/placeholder.png'\nimport {NavLink} from \"react-router-dom\";\n\nimport styles from './Movie.module.css'\n\n\nexport const Movie = memo(({items}) => {\n\n  const url = poster_path ? `https://image.themoviedb.org/t/p/original${poster_path}` : placeholder;\n  return (\n    <>\n      {items.map((item) => (\n        <div\n          className={styles.movieCard}\n        >\n          <img\n            className={styles.poster}\n            key={item.id}\n            src={url}\n            alt={item.title}\n            title={item.title}\n          />\n\n          <NavLink to={{ pathname: `/movies/${item.id}`}}>\n            <div className={styles.title}>\n              <title>\n                <h1 className={styles.title}>\n                  {item.title}\n                </h1>\n                <p>({item.release_date.slice(0, 4)})</p>\n              </title>\n            </div>\n          </NavLink>\n        </div>\n      ))}\n    </>\n  )\n})"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,SAAQA,IAAI,QAAO,OAAO;AAC1B,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,SAAQC,OAAO,QAAO,kBAAkB;AAExC,OAAOC,MAAM,MAAM,oBAAoB;AAAA;AAAA;AAGvC,OAAO,MAAMC,KAAK,gBAAGJ,IAAI,MAAC,QAAa;EAAA,IAAZ;IAACK;EAAK,CAAC;EAEhC,MAAMC,GAAG,GAAGC,WAAW,GAAI,4CAA2CA,WAAY,EAAC,GAAGN,WAAW;EACjG,oBACE;IAAA,UACGI,KAAK,CAACG,GAAG,CAAEC,IAAI,iBACd;MACE,SAAS,EAAEN,MAAM,CAACO,SAAU;MAAA,wBAE5B;QACE,SAAS,EAAEP,MAAM,CAACQ,MAAO;QAEzB,GAAG,EAAEL,GAAI;QACT,GAAG,EAAEG,IAAI,CAACG,KAAM;QAChB,KAAK,EAAEH,IAAI,CAACG;MAAM,GAHbH,IAAI,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAIZ,eAEF,QAAC,OAAO;QAAC,EAAE,EAAE;UAAEC,QAAQ,EAAG,WAAUL,IAAI,CAACI,EAAG;QAAC,CAAE;QAAA,uBAC7C;UAAK,SAAS,EAAEV,MAAM,CAACS,KAAM;UAAA,uBAC3B;YAAA,wBACE;cAAI,SAAS,EAAET,MAAM,CAACS,KAAM;cAAA,UACzBH,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QACR,eACL;cAAA,WAAG,GAAC,EAACH,IAAI,CAACM,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,GAAC;YAAA;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA;QAClC;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEb;EAAC,iBACD;AAEP,CAAC,CAAC;AAAA,MA/BWZ,KAAK;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}